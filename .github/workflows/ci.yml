# Simple CI workflow that mirrors development machine setup
name: CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  test:
    runs-on: macos-26
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
        
    - name: Cache
      uses: actions/cache@v4
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Build
      run: swift build
      
    - name: Test with Coverage
      run: swift test --enable-code-coverage
      
    - name: Generate Coverage Report
      run: |
        # Find the profdata file
        PROFDATA_FILE=$(find .build -name "*.profdata" | head -1)
        if [ -z "$PROFDATA_FILE" ]; then
          echo "No profdata file found. Listing .build directory:"
          find .build -type f -name "*.profdata" -o -name "*.profraw" | head -10
          exit 1
        fi
        echo "Using profdata file: $PROFDATA_FILE"
        
        # Generate LCOV coverage report
        xcrun llvm-cov export -format=lcov -instr-profile="$PROFDATA_FILE" .build/debug/breadcrumbsPackageTests.xctest/Contents/MacOS/breadcrumbsPackageTests > coverage.lcov
        
        # Verify coverage file was created
        if [ -f coverage.lcov ]; then
          echo "Coverage report generated successfully"
          echo "Coverage file size: $(wc -l < coverage.lcov) lines"
        else
          echo "Failed to generate coverage report"
          exit 1
        fi
        
    - name: Upload Coverage
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.lcov
        fail_ci_if_error: false
        
    - name: Lint
      run: |
        brew install swiftlint
        swiftlint lint --reporter github-actions-logging
        
    - name: Format Check
      run: |
        brew install swiftformat
        swiftformat --lint .